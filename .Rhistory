data <- data.frame(x = c(), y = c())
data
data <- data.frame(x = 0, y = 0)
data
ggplot(data, aes(x=x, y=y)) + geom_point()
library(ggplot2)
ggplot(data, aes(x=x, y=y)) + geom_point()
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,1) + ylim(0,1)
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,10) + ylim(0,10)
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,20) + ylim(0,20)
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,10) + ylim(0,20)
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,10) + ylim(0,20) + fix_coords()
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,10) + ylim(0,20) + coord_fixed()
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,12) + ylim(0,20) + coord_fixed()
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,15) + ylim(0,20) + coord_fixed()
seq(0,20,2)
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,15) + ylim(0,20) + coord_fixed() +
geom_hline(data.frame(int = seq(0,20,2)), aes(yintercept = int))
data.frame(int = seq(0,20,2)
data.frame(int = seq(0,20,2))
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,15) + ylim(0,20) + coord_fixed() +
geom_hline(yintercept = seq(0,20,2))
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,15) + ylim(0,20) + coord_fixed() +
geom_hline(yintercept = seq(0,20,2), size=1)
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,15) + ylim(0,20) + coord_fixed() +
geom_hline(yintercept = seq(0,20,2), size=0.5)
ggplot(data, aes(x=x, y=y)) + geom_point() + xlim(0,15) + ylim(0,20) + coord_fixed() +
geom_hline(yintercept = seq(0,20,2), size=0.2)
shiny::runApp()
install.packages("cairo")
install.packages("Cairo")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?clickOpts
library(shiny)
library(shiny)
?clickOpts
shiny::runApp()
plot(data, xlim=c(0,15), y=c(0,20))
abline(h=seq(0,20,2))
plot(data, xlim=c(0,15), y=c(0,20), asp=1)
plot(data, xlim=c(0,15), ylim=c(0,20), asp=1)
plot(data, xlim=c(0,15), ylim=c(0,20))
abline(h=seq(0,20,2))
plot(data, xlim=c(0,15), ylim=c(0,20), asp=1)
abline(h=seq(0,20,2))
plot(data, xlim=c(0,15), ylim=c(0,20))
abline(h=seq(0,20,2))
abline(h=seq(0,20,2), lty=2)
plot(data, xlim=c(0,15), ylim=c(0,20), pch=16, col=blue)
plot(data, xlim=c(0,15), ylim=c(0,20), pch=16, col=blue)
plot(data, xlim=c(0,15), ylim=c(0,20), pch=16, col="blue")
abline(h=seq(0,20,2), lty=2)
shiny::runApp()
data <- data.frame(x = numeric(0), y = numeric(0))
shiny::runApp()
shiny::runApp()
data <- read.csv("dta.csv", header = TRUE)
data <- read.csv("dta.csv", header = TRUE)
data <- data.frame(x = numeric(0), y = numeric(0))
write.csv(data, "dta.csv")
data <- read.csv("dta.csv", header = TRUE)
read.csv("dta.csv", header = TRUE)
data <- data.frame(x = numeric(0), y = numeric(0))
data
data <- read.csv("dta.csv", header = TRUE)
data
data <- read.csv("dta.csv", header = TRUE)
data
data$x[1] == -1
data
data <- rbind(data, data.frame(x = 1, y = 2))
data
write.csv(data, "dta.csv")
data <- read.csv("dta.csv", header = TRUE)
write.csv(data, "dta.csv", row.names=FALSE)
data <- read.csv("dta.csv", header = TRUE)
data <- read.csv("dta.csv", header = TRUE)
data <- rbind(data, data.frame(x = 1, y = 2))
write.csv(data, "dta.csv", row.names=FALSE)
data <- read.csv("dta.csv", header = TRUE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plotOutput("plot1", click = "plot_click" , width = "50%")
shiny::runApp()
shiny::runApp()
write.csv(data.frame(x = numeric(0)), "nlist.csv", row.names=FALSE)
nlist <- read.csv("nlist.csv", header = TRUE)
?which.min
dist.to.line <- runif(1)
nlist <- rbind(nlist, data.frame(x = dist.to.line))
write.csv(nlist, "nlist.csv", row.names = FALSE)
nlist <- read.csv("nlist.csv", header = TRUE)
shiny::runApp()
shiny::runApp()
write.csv(data.frame(x = -1), "nlist.csv", row.names=FALSE)
read.csv("nlist.csv", header = TRUE)[-1, ]
list.temp <- read.csv("nlist.csv", header = TRUE)
dist.to.line <- .4
nlist <- rbind(nlist, data.frame(x = dist.to.line))
write.csv(nlist, "nlist.csv", row.names = FALSE)
list.temp <- read.csv("nlist.csv", header = TRUE)
shiny::runApp()
data.frame(Num = "NA", unif = "NA")
aux <- data.frame(Num = "NA", unif = "NA")
aux2 <- list.temp[-1, ]
data.frame(Num = 1:(nrow(list.temp)-1), unif = list.temp[-1, ])
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?adjust
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
describe(runif(19))
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
describe(runif(10))
summary(runif(10))
?summary
anova(runif(10))
library(psych)
install.packages("psych")
library(psych)
describe(runif(10))
library(Hmisc)
nlist
describe(nlist[-1, ])
nlist
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(Hmisc)
shiny::runApp()
?describe
shiny::runApp()
describe.Hmisc(nlist)
Hmisc::describe(nlist[-1, ])
Hmisc::describe(runif(10))
aux <- Hmisc::describe(nlist[-1, ])
aux
names(aux)
aux2 <- aux$descript
aux2
aux
table(aux)
aux
aux$nlist[-1, ]
names(aux)
aux$units
aux$format
aux$counts
aux2 <- aux$counts
aux2
table(aux2)
data.frame(aux2)
shiny::runApp()
data.frame(Hmisc::describe(c(nlist[-1, ])$counts, sd=sd(nlist[-1, ])))
nlist[-1, ])$counts
nlist[-1, ])$counts
c(Hmisc::describe(nlist[-1, ])$counts, sd=sd(nlist[-1, ]))
nlist[-1, ]
sd(0.3)
sd(c(0.3,0.5))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
stats <- Hmisc::describe(nlist[-1,])$counts
stats
Hmisc::describe(nlist[-1,])$counts[-2]
Hmisc::describe(nlist[-1,])$counts[-2:3]
Hmisc::describe(nlist[-1,])$counts[-c(2,3)]
shiny::runApp()
Hmisc::describe(nlist[-1,])$counts[-c(2,3)]
shiny::runApp()
shiny::runApp()
shiny::runApp()
new.point <- c(input$plot_click$x, input$plot_click$y)
data <- read.csv("nlist.csv", header = TRUE)
data <- data[-1, ]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
downloadHandler
?downloadHandler
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
